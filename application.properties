locationserviceUrl=http://localhost:8080/getAllLocatin

package com.somasa.client.service;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Test {
	
	
	  public static String csvtoStringData=new String();

	public static void main(String[] args) throws FileNotFoundException {
		
		try {  
		 List<User> userMan=new ArrayList<User>();
		 User kamesh=new User("kamesh","Nani","kamesh@gmail.com","123kamesh");
		 User nani=new User("nani","adena","nani@gmail.com","123nani");
		 User ravi=new User("ravi","muthureddy","ravi@gamail.com","123ravi");
		 //User nikhil=new User("nikhil","rachaveti","nikhil@gmail.com","123nikhul");
		 userMan.add(kamesh);
		 userMan.add(nani);
		 userMan.add(ravi);
		 //userMan.add(nikhil);
		//String daata=readCsvandConvertToString("E:\\input.csv");
		
		List<String> daataList=readCsvandConvertToList("E:\\input.csv");

			for (User user : userMan) {
				daataList.removeIf(n -> (user.getFirstName().equals(getValues(n,0)) && (user.getLastName().equals(getValues(n,1))) && (user.getEmail().equals(getValues(n,2))) && (user.getContactId().equals(getValues(n,3))) ));
			}
			
			 generateReportForSF(daataList);
		    
		    
		    
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}  
		      
	
		

}

	private static void generateReportForSF(List<String> daataList) throws IOException {
		FileWriter writer = new FileWriter("E:\\outPut.csv");
			BufferedWriter buffer = new BufferedWriter(writer);  
			String firstLine="FirstName|LastName|Email|ContactId";
			buffer.write(firstLine);
			buffer.newLine();
			daataList.stream().forEach(line-> {
				try {
					buffer.write(line);
					buffer.newLine();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}); 
			buffer.write(daataList.size()+","+ZonedDateTime.now().toInstant().toEpochMilli());
		buffer.close();
	}
	
	public static String readCsvandConvertToString(String fileName) {
		BufferedReader br = null;
		String convertedString="";
		try {
			br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(fileName))));
			convertedString=Arrays.toString(br.lines().skip(1).map(Object::toString).toArray()) ;
			System.out.println(convertedString);
			if(br!=null)
				br.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	      return convertedString;
	      
	}
	public static List<String> readCsvandConvertToList(String fileName) {
		BufferedReader br = null;
		List<String >convertedString=new ArrayList<String>();
		try {
			br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(fileName))));
			convertedString=br.lines().skip(1).map(Object::toString).collect(Collectors.toList());
			System.out.println(convertedString);
			if(br!=null)
				br.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	      return convertedString;
	      
	}
	public static String getValues(String line,int index) {
		
		String[] employee = line.split("\\|"); 
		
		return employee[index];
		
		
		
	}
}
